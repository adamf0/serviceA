version: '3'
services:
  
  #PHP Service
  app:
    build:
      context: .
      dockerfile: app.Dockerfile
    image: app
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      # - ./docker/tmp_log/log/:/../log/
      # - ./docker/tmp_run/log/:/../run/
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-net

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      # - ./docker/nginx/log/:/var/log/nginx/
    networks:
      - app-net

  #MySQL Service
  db:
    image: mysql
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    command: --max_connections=100000 --default-authentication-plugin=mysql_native_password --innodb_buffer_pool_size=1024M --innodb_read_io_threads=4 --innodb_flush_log_at_trx_commit=2 --innodb_flush_method=O_DIRECT
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      # MYSQL_ROOT_PASSWORD: 251423
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
      - ./docker/dbdata:/var/lib/mysql:rw
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-net

#Docker Networks
networks:
  app-net:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local